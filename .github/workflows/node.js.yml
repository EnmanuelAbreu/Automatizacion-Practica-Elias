name: Cypress Tests

on:
  push:
    branches:
      - main  # Se ejecuta cuando se hace un push en la rama "main" (o la rama que elijas)

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]  # Usa 2 instancias paralelas

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout Code
        uses: actions/checkout@v4

      # Paso 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Especifica la versión de Node.js que estás utilizando

      # Paso 3: Instalar dependencias de npm
      - name: Install dependencies
        run: npm install

      # Paso 4: Iniciar el servidor
      - name: Start web server
        run: |
          nohup npm start &  # Ejecuta el servidor en segundo plano
        env:
          CI: true

      # Paso 5: Esperar a que el servidor esté disponible
      - name: Wait for server to be ready
        run: |
          echo "Esperando que el servidor esté disponible..."
          npx wait-on http://localhost:3000  # Espera a que el servidor esté listo
        timeout-minutes: 5

      # Paso 6: Ejecutar las pruebas de Cypress
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: npm start  # Inicia el servidor nuevamente si es necesario
          wait-on: 'http://localhost:3000'  # Espera a que el servidor esté disponible
          record: true  # Activa la grabación en Cypress Cloud
          parallel: true  # Ejecuta las pruebas en paralelo
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
